import rxtxrobot.*;
import rxtxrobot.ArduinoUno;
import rxtxrobot.ArduinoNano;
import rxtxrobot.RXTXRobot;

public class AndrewNavigation 
{
	public static RXTXRobot r;
	
	public static void main(String[] args)
	{
		r = new ArduinoNano();
		r.setPort("COM3");
		r.connect();
		r.attachMotor(RXTXRobot.MOTOR1, 5);
		r.attachMotor(RXTXRobot.MOTOR2, 6);
		int distance = 100000;
		while (distance >= 20)
		{
			distance = getPing();
			if (distance >= 115)
			{
				moveMotor(500,500,0500);
			}else if (distance >= 30 && distance <= 115)
			{
				firstTurn();
			}else if (distance <= 30)
			{
				moveMotor(250,250,1000);
			}
		}
	}
	
	public static int getPing()
	{
		int PING_PIN = 13;
		int distance = r.getPing(PING_PIN);
		System.out.println("Response: " + r.getPing(PING_PIN) + " cm");
		return distance;
	}
	
	public static void moveMotor(int leftMotor, int rightMotor, int time)
	{
		r.runMotor(RXTXRobot.MOTOR1, leftMotor, RXTXRobot.MOTOR2, -rightMotor, 0); // Run both motors forward indefinitely 
		r.sleep(time); // Pause execution, but the motors keep running. 
		r.runMotor(RXTXRobot.MOTOR1,0,RXTXRobot.MOTOR2,0,0); // Stop both motors 
	}
	
	public static void firstTurn()
	{
		r.runMotor(RXTXRobot.MOTOR1, 300, RXTXRobot.MOTOR2, 0, 2520);
		int distance = getPing();
		if (distance == -1)
		{
			r.runMotor(RXTXRobot.MOTOR1, 0,  RXTXRobot.MOTOR2, 300, 5040);
			r.runMotor(RXTXRobot.MOTOR1,500,RXTXRobot.MOTOR2,500,3000);
		}else if (distance >= 112 && distance <= 190)
		{
			r.runMotor(RXTXRobot.MOTOR1, 500, RXTXRobot.MOTOR2, 500, 3000);
		}
	}
}
