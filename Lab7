//Necessary imports
import java.io.File;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.Scanner;
import java.util.Random;
import java.io.*;
import java.util.*;

//Main class
public class Lab7
{
	public static void main(String[] args)
	{
		WhammyGame wg = new WhammyGame();
		wg.playGame();
	}
}

//Initialize WhammyGame class
class WhammyGame
{
	//Create an ArrayList for limitless players
	ArrayList<Player> pList = new ArrayList<Player>();
	public WhammyGame()
	{
	}
	
	//Initiate the game
	public void playGame()
	{
		//Initialize the board
		Board gameBoard = new Board();
		Scanner input = new Scanner(System.in);
		int pNum = 0;
		//System will scan to see if they enter a number or a letter: if they enter a letter, warn them they entered a letter and not a number.
		try
		{
			System.out.println("Please enter the number of players: ");
			pNum = input.nextInt();
		}catch(RuntimeException e)
		{
			System.out.println("Error: Input Mismatch Exception (Didn't Enter a Number)");
			System.out.println("Next time, please enter a NUMBER, not a letter.");
			return;
		}
		//For the amount of players, loop and get the name of each one, and add to the ArrayList
		for(int p = 1; p<=pNum; p++)
		{
			System.out.printf("\nEnter player %d name: ",p);
			String playerName = input.next();
			pList.add(new Player(playerName));
		}
		System.out.printf("\nPlayers ready...set...play!\n");
		boolean won = false;
		int i=0;
		//Spin until a player wins
		while (!won)
		{
			for (i=0; i<pList.size(); i++)
			{
				int score = pList.get(i).takeTurn(gameBoard);
				if(score >= 10000)
					won = true;
			}
		}
		System.out.println("End of game!");	
	}
}

//Initialize player class
class Player
{
	private String name;
	private int money;

	//Player name
	public Player(String pName)
	{
		name = pName;
	}
	
	public String getName()
	{
		return name;
	}
	
	public void setName(String sName)
	{
		name = sName;
	}
	
	public int getMoney()
	{
		return money;
	}
	
	public void setMoney(int score)
	{
		money = score;
	}
	
	//takeTurn
	public int takeTurn(Board gameBoard)
	{
		System.out.printf("\n%s's turn.\n\n", name);
		Scanner input = new Scanner(System.in);
		String spinyn = "";
		boolean exit = true;
		//Loop the question of spin or no
		do
		{
			System.out.printf("%s has $%d. Spin?(Y/N)", name, money);
			spinyn = input.next();
			if(spinyn.equalsIgnoreCase("Y"))
			{
				exit = false;
				int roll = gameBoard.spin();
				if(roll==-1)
				{
					System.out.println("Whammy!");
					exit = true;
				}
				else
				{
					System.out.printf("Spun $%d\n", roll);
				}
				postMoney(roll);
			}
			else if (spinyn.equalsIgnoreCase("N"))
			{
				exit = true;
			}
			else
			{
				System.out.println("Please enter a valid input.");
				exit = false;
			}
		}while (!exit);
		return money;
	}
	//Return money
	public void postMoney(int pMoney)
	{
		if(pMoney == -1)
			money = 0;
		else
			money += pMoney;
	}
	//Player total
	public String toString()
	{
		return "Player " + name + "'s score is now $" + money;
	}
}
//Initialize board
class Board 
{
	private Scanner read;
	private int numOfCells = 0;
	private ArrayList<Cell> prizes = new ArrayList<Cell>();
	//Board array with the prizes
	public Board()
	{
		try
		{
			read = new Scanner(new File("src\\CellValues.txt"));
		}catch (Exception e)
		{
			System.out.println("Your file does not seem to exist or cannot be found, please try again.");
			System.out.println(e.getMessage());
			System.exit(0);
		}
		while(read.hasNext())
		{
			numOfCells++;
			String line = read.nextLine();
			if(line.indexOf(" ") > 0)
			{
				prizes.add(new SpecialCell(Integer.parseInt(line.substring(0, line.indexOf(" "))),
						Double.parseDouble(line.substring(line.indexOf(" ") + 1))));
			}
			else
			{
				prizes.add(new Cell(Integer.parseInt(line)));
			}	
		//read.close();
				
		}
	}
	//Random number generated for winnings from ArrayList
	public int spin()
	{
		Random rand = new Random();
		int index = rand.nextInt(numOfCells);
		System.out.println("Array Value: " + index);
		int value = prizes.get(index).getValue();
		return value;
	}
}

//Initialize Cell
class Cell
{
	public int value;
	//public Cell(){};
	
	public Cell (int value)	{
		this.value = value;
	}
	public void setValue(int value1){
		value = value1;
	}
	public int getValue(){
		return value;
	}
	public String toString(){
		if(value==-1)
		{
			return "Whammy!";	
		}else
		{
			return "$" + Integer.toString(value);
		}
	}
}

//Initialize SpecialCell
class SpecialCell extends Cell
{
	private double multiplier;	
	public SpecialCell(int value, double multiplier){
		super.value = value;
		this.multiplier = multiplier;
	}
	public void setMultiplier(double multiplier1){
		this.multiplier = multiplier1;
	}

	public double getMultiplier()
	{
		return multiplier;
	}

	public String toString()
	{
		if(value == -1)
		{
			return "Whammy!";
		}else
			return "The value would normally be " + value + " but because of the multiplier " + multiplier + ", the value to be added is " + (value * multiplier);
	}
}
